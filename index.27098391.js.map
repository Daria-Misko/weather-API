{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["import axios from \"axios\";\nconst apiKey = \"73bd6bca6bd522830119f0c6decba840\";\nconst KELVIN = 273;\n\nconst tempElement = document.querySelector(\".temperature-value p\");\nconst descElement = document.querySelector(\".temperature-description p\");\nconst locationElement = document.querySelector(\".location p\");\nconst iconElement = document.querySelector(\".weather-icon\");\nconst dayElement = document.querySelector(\".day p\");\nconst dateElement = document.querySelector(\".date p\");\nconst button = document.querySelector(\".weather-button\");\nconst weatherWeek = document.querySelector(\".weather-week__container\");\nconst weatherCurrent = document.querySelector(\".weather-current__container\");\nconst closeBtn = document.querySelector(\".weather-week-close-button\")\nconst weatherWeekDayForecast = document.querySelector(\".weather-week__forecast\")\n\nbutton.addEventListener('click', onClick)\ncloseBtn.addEventListener('click', onClose)\n\nconst date = new Date()\nlet currentdate = date.toLocaleDateString('en-gb', { day: \"numeric\", month: \"short\", year: \"numeric\" })\nconst weekday = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\nlet day = weekday[date.getDay()];\n\nconst weather = {\n\ttemperature: {\n\t\tvalue: \"\",\n\t\tunit: \"celsius\"\n\t},\n\tdescription: \"\",\n\ticonId: \"\",\n\tcity: \"\",\n\tcountry: \"\",\n\tday: `${date}`,\n\tdata: `${day}`\n};\n\ndayElement.insertAdjacentHTML('beforeend', `${day}`); \ndateElement.insertAdjacentHTML('beforeend', `${currentdate}`); \n\nif('geolocation' in navigator){\n    navigator.geolocation.getCurrentPosition(setPosition, showError);\n}else{\n    console.log(error);\n}\n\nfunction setPosition(position) {\n\tif (position && position.coords) {\n\t\tlet latitude = position.coords.latitude;\n\t\tlet longitude = position.coords.longitude;\n\n\t\tgetWeather(latitude, longitude);\n\t\tforecast(latitude, longitude);\n\t} else {\n\t\tconsole.log(\"Position data not available.\");\n\t}\n\n}\n\nfunction showError(error) {\n\tconsole.log(`nothing`);\n   //  notificationElement.style.display = \"block\";\n   //  notificationElement.innerHTML = `<p> ${error.message} </p>`;\n}\n\nfunction getWeather(latitude, longitude) {\n   let api = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}`;\n    \n    fetch(api)\n        .then(function(response){\n            let data = response.json();\n\t\t\t  return data;\n        })\n\t\t .then(function (data) {\n\t\t\t// console.log(data);\n\t\t\tweather.temperature.value = Math.floor(data.main.temp - KELVIN);\n\t\t\tweather.description = data.weather[0].description;\n\t\t\tweather.iconId = data.weather[0].icon;\n\t\t\tweather.city = data.name;\n\t\t\tweather.country = data.sys.country;\n        })\n        .then(function(){\n            displayWeather();\n        });\n}\n\nfunction displayWeather() {\n   iconElement.innerHTML = `<img src=\"http://openweathermap.org/img/wn/${weather.iconId}@4x.png\" height= \"155\"\n\twidth= \"165\"/>`;\n   tempElement.insertAdjacentHTML('beforeend', `${weather.temperature.value}°`);\n   descElement.innerHTML = `${weather.description}`;\n\tlocationElement.innerHTML = `${weather.city}`;\n}\n\n\n\nfunction forecast(latitude, longitude) {\n\tconst newKey = 'ba7fddf449339701f9df702aeb87be1d'\n\tconst API_URL = `http://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${newKey}`;\n    \n\tfetch(API_URL)\n  .then(response => response.json())\n  .then(data => {\n\t  const dataArray = data.list;\n\t  const groupedData = {};\n\t  for (let i = 0; i < dataArray.length; i++) {\n      const date = dataArray[i].dt_txt.slice(0, 10);\n      if (!groupedData[date]) {\n\t\t\tgroupedData[date] = {\n\t\t\tdate: date,\n          minTemp: dataArray[i].main.temp,\n          maxTemp: dataArray[i].main.temp,\n          weather: dataArray[i].weather[0].description\n        };\n      } else {\n        if (dataArray[i].main.temp < groupedData[date].minTemp) {\n          groupedData[date].minTemp = dataArray[i].main.temp;\n        }\n        if (dataArray[i].main.temp > groupedData[date].maxTemp) {\n          groupedData[date].maxTemp = dataArray[i].main.temp;\n        }\n      }\n    }\n\t  console.log(groupedData);\n\n\t  const groupedDataPerDay = {\n  \"2022-03-05\": {\n    date: \"2022-03-05\",\n    minTemp: 5,\n    maxTemp: 10,\n    weather: \"Cloudy\"\n\t \n  },\n  \"2022-03-06\": {\n    date: \"2022-03-06\",\n    minTemp: 8,\n    maxTemp: 12,\n    weather: \"Rainy\"\n  }\n};\nweatherWeekDayForecast.innerHTML = '';\n// перебираємо ключі в об'єкті\n\t  Object.keys(groupedData).forEach(date => {\n\t\t  const data = groupedData[date];\n\t\t  const dateValue = data.date;\n\t\t  \n\t\t\tconst datePotoch = new Date(dateValue);\n\t\t\tconst formattedDate = datePotoch.toLocaleString('en-GB', { day: 'numeric', month: 'short', year: 'numeric' });\n\n  \t\t\tconst minTempValue = Math.floor(data.minTemp - KELVIN);\n  \t\t\tconst maxTempValue = Math.floor(data.maxTemp - KELVIN);\n\t\t  \tconst weatherValue = data.weather;\n  \n\t\t  \n\t\t//   console.log(`Дата: ${formattedDate}, Мінімальна температура: ${minTempValue}, Максимальна температура: ${maxTempValue}, Опис погоди: ${weatherValue}`);\n\t\t  \n\t\t  const listItem = document.createElement('li');\n\t\t  listItem.classList.add('weather-week__item')\n        listItem.innerHTML = `<span class=\"weather-week__value\">${formattedDate}</span>:<br> Min. temp: <span class=\"weather-week__value\">${minTempValue}</span>, Max. temp: <span class=\"weather-week__value\">${maxTempValue}</span><br> Descr.: <span class=\"weather-week__value\">${weatherValue}</span>`;\n        weatherWeekDayForecast.appendChild(listItem);\n\n});\n\n\t  \n\t  \n\t  \n  })  \n  .catch(error => console.log(error));\n\t}\n\n\tweatherWeek.classList.add('is-hidden');\n\nfunction onClick(e) {\n\te.preventDefault();\n\tweatherCurrent.classList.add('is-hidden');\n\tif (weatherWeek.classList.contains('is-hidden')) {\n\t\tweatherWeek.classList.remove('is-hidden')\n\t}\n}\n\nfunction onClose(e) {\n\te.preventDefault();\n\tweatherWeek.classList.add('is-hidden');\n\tif (weatherCurrent.classList.contains('is-hidden')) {\n\t\tweatherCurrent.classList.remove('is-hidden')\n\t}\n}"],"names":["$44ae6d9db4eaca0f$var$apiKey","$44ae6d9db4eaca0f$var$KELVIN","$44ae6d9db4eaca0f$var$tempElement","document","querySelector","$44ae6d9db4eaca0f$var$descElement","$44ae6d9db4eaca0f$var$locationElement","$44ae6d9db4eaca0f$var$iconElement","$44ae6d9db4eaca0f$var$dayElement","$44ae6d9db4eaca0f$var$dateElement","$44ae6d9db4eaca0f$var$button","$44ae6d9db4eaca0f$var$weatherWeek","$44ae6d9db4eaca0f$var$weatherCurrent","$44ae6d9db4eaca0f$var$closeBtn","$44ae6d9db4eaca0f$var$weatherWeekDayForecast","addEventListener","e","preventDefault","classList","add","contains","remove","$44ae6d9db4eaca0f$var$date","Date","$44ae6d9db4eaca0f$var$currentdate","toLocaleDateString","day","month","year","$44ae6d9db4eaca0f$var$day","getDay","$44ae6d9db4eaca0f$var$weather","temperature","value","unit","description","iconId","city","country","concat","data","insertAdjacentHTML","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","api","fetch","then","response","json","Math","floor","main","temp","weather","icon","name","sys","innerHTML","$44ae6d9db4eaca0f$var$getWeather","newKey","API_URL","dataArray","list","groupedData","i","length","date1","dt_txt","slice","minTemp","maxTemp","date","console","log","Object","keys","forEach","date2","_$data","dateValue","formattedDate","toLocaleString","minTempValue","maxTempValue","weatherValue","listItem","createElement","appendChild","catch","error","$44ae6d9db4eaca0f$var$forecast"],"version":3,"file":"index.27098391.js.map"}